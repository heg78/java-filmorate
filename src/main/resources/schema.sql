DROP TABLE IF EXISTS FRIENDS CASCADE;
DROP TABLE IF EXISTS FILMS CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS LIKES CASCADE;
DROP TABLE IF EXISTS REF_GENRES CASCADE;
DROP TABLE IF EXISTS REF_MPA CASCADE;
DROP TABLE IF EXISTS GENRES CASCADE;

CREATE TABLE IF NOT EXISTS USERS (
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	EMAIL CHARACTER VARYING(50),
	LOGIN CHARACTER VARYING(50),
	NAME CHARACTER VARYING(100),
	BIRTHDAY DATE
);

CREATE TABLE IF NOT EXISTS FRIENDS (
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER NOT NULL,
	IS_CONFIRMED BOOLEAN DEFAULT FALSE NOT NULL,
	CONSTRAINT FRIENDS_FK FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
	CONSTRAINT FRIENDS_FK2 FOREIGN KEY (FRIEND_ID) REFERENCES USERS(ID)
);

CREATE TABLE IF NOT EXISTS REF_MPA(
	ID INTEGER PRIMARY KEY NOT NULL,
	NAME CHARACTER VARYING(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILMS (
	ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	NAME CHARACTER VARYING(100),
	DESCRIPTION CHARACTER VARYING(200),
	RELEASE_DATE DATE,
	DURATION INTEGER,
	RATE INTEGER,
	MPA INTEGER,
	CONSTRAINT FILMS_FK2 FOREIGN KEY (MPA) REFERENCES REF_MPA(ID)
);

CREATE TABLE IF NOT EXISTS LIKES (
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	CONSTRAINT LIKES_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID),
	CONSTRAINT LIKES_FK2 FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);


CREATE TABLE IF NOT EXISTS REF_GENRES(
	ID INTEGER PRIMARY KEY NOT NULL,
	NAME CHARACTER VARYING(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS GENRES(
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT GENRES_FK FOREIGN KEY (FILM_ID) REFERENCES FILMS(ID),
	CONSTRAINT GENRES_FK2 FOREIGN KEY (GENRE_ID) REFERENCES REF_GENRES(ID)
)
